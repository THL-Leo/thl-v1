'use client'

import { Card, CardHeader, CardTitle, CardDescription } from "@/components/ui/card"
import { RepoLanguageChart } from '@/components/RepoLanguageChart'

const projects = [
  {
    title: "Moodify",
    description: [
        `Moodify is a platform that lets users relive their memories through music.`,
        `By uploading an image, users receive 10 songs that perfectly capture the emotion of their photo, creating a soundtrack for their memories.`,
        `Built in 36 hours at LA Hacks 2024, this project aims to provide more meaningful music recommendations for personal stories than current offerings from platforms like Instagram.`,
        `The project received positive feedback from hackathon judges.`
    ],
    tags: ["Reflex Web Framework", "Spotify API", "Gemini 1.0 Pro Vision", "OAuth"],
    links: [
      { label: "GitHub", url: "https://github.com/THL-Leo/Moodify" },
    ],
    github: {
      owner: "THL-Leo",
      repo: "Moodify"
    }
  },
  {
    title: "Brainrot Personality Test",
    description: [
        `Received 'Would Blow up on TikTok' award at jia.seed Hackathon 24.`,
        `This project is a personality test on what kind of brainrot content the user knows.`,
        `It utilizes OpenAI's GPT-4o mini model to analyze the user's response and roast them for the time they spend on social media.`,
        `This project was built in 24 hours.`,
    ],
    tags: ["React.js", "MUI", "OpenAI"],
    links: [
      { label: "GitHub", url: "https://github.com/THL-Leo/brnrot.ai" },
      { label: "Live Demo", url: "https://brnrot-ai.vercel.app/" },
    ],
    github: {
      owner: "THL-Leo",
      repo: "brnrot.ai"
    }
  },
  {
    title: "Email Writer",
    description: [
      `Email Writer is a tool that enables Claude to analyze a user's writing style and generate personalized emails based on their prompts.`,
      `Built with Next.js, Shadcn, and the Claude API.`,
      `The project followed a clear roadmap generated by Claude, using iterative feature-by-feature development rather than a monolithic approach.`,
      `Developed in 12 hours during the Anthropic x USC Hackathon 2025.`
    ],
    tags: ["Next.js", "Shadcn UI", "Claude API"],
    links: [
      { label: "GitHub", url: "https://github.com/THL-Leo/idontknowhowtowriteemails" },
    ],
    github: {
      owner: "THL-Leo",
      repo: "idontknowhowtowriteemails"
    }
  },
  {
    title: "Conclave",
    description: [
      `Inspired by the film "Conclave" and the recent papal election, I developed this program to simulate a papal election process.`,
      `The application leverages LMStudio's Python SDK and Requests library to interface with the Phi3.1 mini language model.`,
      `Cardinal biographies are scraped from Wikipedia and processed through GPT-4o mini to create detailed summaries of each cardinal's background and political views.`,
      `The model then takes on the role of each cardinal and casts votes for whom they believe would be the most suitable candidate for the papacy.`,
      `For future development, I plan to implement agentic behavior, allowing cardinals to engage in dialogue and potentially influence each other's voting decisions.`
  ],
    tags: ["Python", "LLM", "Web Scraping"],
    links: [
      { label: "GitHub", url: "https://github.com/THL-Leo/conclave" },
    ],
    github: {
      owner: "THL-Leo",
      repo: "conclave"
    }
  }
  // Add more projects as needed
]

export function ProjectsSection() {
  return (
    <section className="py-20 px-4 md:px-8 lg:px-16" id="projects">
      <div className="max-w-6xl mx-auto">
        {projects.map((project, index) => (
          <div key={project.title} className="mb-32 last:mb-0">
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-12">
              {/* Left Column */}
              <div className="space-y-6">
                <h2 className="text-xl font-bold">
                  {project.title}
                </h2>
                <div className="space-y-4">
                  {project.description.map((desc, idx) => (
                    <p 
                      className="text-base" 
                      key={project.title + idx}
                    >
                      {desc}
                    </p>
                  ))}
                </div>
                {/* Tags */}
                <div className="flex flex-wrap gap-2">
                  {project.tags.map((tag) => (
                    <span
                      key={tag}
                      className="px-3 py-1 bg-muted rounded-full text-sm"
                    >
                      {tag}
                    </span>
                  ))}
                </div>

                {/* Links */}
                <div className="space-x-4 pt-2">
                  {project.links.map((link) => (
                    <a
                      key={link.label}
                      href={link.url}
                      target="_blank"
                      rel="noopener noreferrer"
                      className="text-foreground hover:text-muted-foreground transition-colors"
                    >
                      {link.label} â†’
                    </a>
                  ))}
                </div>
              </div>

              {/* Right Column - Chart */}
              <div>
                <RepoLanguageChart 
                  repoName={project.github.repo} 
                />
              </div>
            </div>
          </div>
        ))}
      </div>
    </section>
  )
} 